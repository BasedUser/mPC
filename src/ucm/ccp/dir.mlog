#so, since i didn't write the fs driver yet(TODO)
#it's just going to list every file
#not cp/m like but eh
set COPYRIGHT "ukern-ucm-ccp-dir – a dir listing program for ccp ukern-ucm\n© 2025 camelStyleUser. Released under GPLv3 (https://www.gnu.org/licenses/gpl-3.0.html).\nThis program is provided without any warranty."
set SOURCELINK "https://github.com/BasedUser/mPC"
loop:
set fsdpid 4
read c cell1 0
jump ident equal c -1
jump stop equal c -2
jump start equal c -3
jump valid equal c -5
jump error equal c -4
jump code equal e 1
jump loop always
ident:
write 0 cell1 1
write 0x444952 cell1 2#DIR
write 0 cell1 3
write 0 cell1 0
jump loop always
stop:
write 0 cell1 0
set e 0
jump loop always
start:
write 0 cell1 0
set e 1
read pid cell1 1
set dirindex 0
set stage 0
set metastage 1
jump loop always
valid:
write 0 cell1 0
jump stage2 greaterThanEq stage 2
read v cell1 1
jump nomoreipc equal v -1
set stage 2
write 3 cell1 0
jump loop always
stage2:
jump stage3 greaterThanEq stage 3
jump handlegetargs equal metastage 1
jump handlelistdir equal metastage 2
jump handlelisteddir equal metastage 3
jump handleprintname equal metastage 4
jump handletermd equal metastage 5
jump handleshutdown equal metastage 6
set stage -1
jump loop always
handlegetargs:
read maindata cell1 4
op shr counth maindata 48
jump handlegetargshaveall lessThan counth 6#6 is the usual packed amount
#process current arg block here
set stage 0
jump loop always
handlegetargshaveall:
#finish processing the last arg block if it's not 0 length
set metastage 2
set stage 2
write 6 cell1 0
jump loop always
handlelistdir:
write dirindex cell1 4
write 0 cell1 3#root dir
write 6 cell1 2#list_dir
write fsdpid cell1 1
write 1 cell1 0
set stage 3
set metastage 3
jump loop always
handlelisteddir:
read resp cell1 4
jump handlelisteddir_fail notEqual resp 0
read n1 cell1 5
read n2 cell1 6
read n3 cell1 7
read ptr cell1 8#not used but wharever
set nameprog 0
set stage 2
set metastage 4
write 6 cell1 0
jump loop always
handlelisteddir_fail:
set stage 2
set metastage 6#and so it ends
write 6 cell1 0
jump loop always
handleprintname:
jump handleprintname_notn1 greaterThanEq nameprog 6
op mul shift nameprog 8
op shr char n1 shift
op and char char 0xff
jump handleprintname_printchar always
handleprintname_notn1:
jump handleprintname_notn2 greaterThanEq nameprog 12
op mul shift nameprog 8
op sub shift shift 48
op shr char n2 shift
op and char char 0xff
jump handleprintname_printchar always
handleprintname_notn2:
jump handleprintname_notn3 greaterThanEq nameprog 18
op mul shift nameprog 8
op sub shift shift 96
op shr char n3 shift
op and char char 0xff
jump handleprintname_printchar always
handleprintname_notn3:#fetch next entry or die
#actually no wait why don't i write the newline here
op add dirindex dirindex 1
set stage 3
set metastage 2
write 0x0a cell1 2
write 2 cell1 1
write 1 cell1 0
jump loop always
handleprintname_printchar:
op add nameprog nameprog 1
write char cell1 2
write 2 cell1 1#termd
write 1 cell1 0
set stage 3
set metastage 5
jump loop always
handletermd:
set stage 2
set metastage 4
write 6 cell1 0
jump loop always
handleshutdown:
write 1 cell1 1#hello ccp, i am the dead
write 1 cell1 0
waitforshutdownnotifsucc:
read v cell1 0
jump waitforshutdownnotifsucc notEqual v -5
write pid cell1 1#the final actual kill
write 5 cell1 0
set stage 3
jump loop always
stage3:
set stage 0
jump loop always
nomoreipc:
set stage 0
write 0 cell1 63
jump loop always
code:
jump loop notEqual stage 0
read ipcin cell1 63
jump handleipcin notEqual ipcin 0
jump loop always
handleipcin:
write -1 cell1 1
write 2 cell1 0
set stage 1
jump loop always
error:
write 0 cell1 0
jump loop always