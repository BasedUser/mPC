set COPYRIGHT "ukern-init – simple init process for ukern\n© 2025 camelStyleUser. Released under GPLv3 (https://www.gnu.org/licenses/gpl-3.0.html).\nThis program is provided without any warranty."
set SOURCELINK "https://github.com/BasedUser/mPC"
loop:
read c cell1 0
jump ident equal c -1
jump start equal c -3
jump stop equal c -2
jump valid equal c -5
jump error equal c -4
jump code equal e 1
jump loop always
ident:
write 0 cell1 1
write 0x696e6974 cell1 2#init
write 0 cell1 3
write 0 cell1 0
jump loop always
stop:
write 0 cell1 0
set e 0
jump loop always
start:
write 0 cell1 1
write 0x74657374 cell1 2#test
write 4 cell1 0
set stage 1
set eg 0
set e 1
jump loop always
valid:
write 0 cell1 0
jump loop greaterThanEq stage 27
jump stage25 equal stage 25
jump stage26 equal stage 26
jump printkernver greaterThan stage 20
jump printtry greaterThan stage 2
jump stage2 greaterThan stage 1
write 0 cell1 1
write 0x7465726d64 cell1 2#termd
write 4 cell1 0
set stage 2
jump loop always
stage2:
write 0 cell1 1
write 0x6b6264 cell1 2#kbd
write 4 cell1 0
set stage 3
jump loop always
stage25:
write 2 cell1 1
write 0x0a cell1 2
write 1 cell1 0 
set stage 26
jump loop always
stage26:
write 1 cell1 1#sending ipc to test
write 0x060b0602 cell1 2
write 0 cell1 3
write 0 cell1 4
write 0 cell1 5
write 0 cell1 6
write 0 cell1 7
write 0 cell1 8
write 1 cell1 0
set stage 27
jump loop always
printkernver:
op sub cdig stage 21
jump getkernver equal cdig 0
jump readkernverandprintdigit equal cdig 1
jump tryprintdigit always
getkernver:
write 6 cell1 0
op add stage stage 1
jump loop always
readkernverandprintdigit:
set rippledisp 1
read kernver cell1 1
op idiv dig kernver 100
op mod dig dig 10
op add dig dig 0x30
jump printdigit always
tryprintdigit:
op idiv dig kernver 100
op mod dig dig 10
op add dig dig 0x30
printdigit:
op equal zero dig 0x30
op and notprint rippledisp zero
jump noreplacespace equal notprint 0
set dig 0x20
jump skiprippledispres always
noreplacespace:
set rippledisp 0
skiprippledispres:
write 2 cell1 1
write dig cell1 2
write 1 cell1 0 
op add stage stage 1
op mul kernver kernver 10
jump loop always
printtry:
op mul off stage 2
op sub off off 6
op add @counter @counter off
set char 0xc9
jump printsend always
set char 0xce
jump printsend always
set char 0xc9
jump printsend always
set char 0xd4
jump printsend always
set char 0x20
jump printsend always
set char 0x75
jump printsend always
set char 0x70
jump printsend always
set char 0x0a
jump printsend always
set char 0x75
jump printsend always
set char 0x6b
jump printsend always
set char 0x65
jump printsend always
set char 0x72
jump printsend always
set char 0x6e
jump printsend always
set char 0x20
jump printsend always
set char 0x76
jump printsend always
set char 0x65
jump printsend always
set char 0x72
jump printsend always
set char 0x20
jump printsend always
printsend:
write 2 cell1 1
write char cell1 2
write 1 cell1 0 
op add stage stage 1
jump loop always
code:
jump waittime equal g 1
op add t @second 2
waittime:
set g 1
jump loop greaterThan t @second
set g 0
jump loop always
error:
write 0 cell1 0
jump loop always
